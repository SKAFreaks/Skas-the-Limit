# This is a basic workflow to help you get started with Actions

name: CI
env:
    SDL_AUDIODRIVER: dummy
    SDL_VIDEODRIVER: dummy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: renpybuild
        uses: ProjectAliceDev/renpy-build-action@v1.2.0
        
      - name: Tell me the directory
        run: echo ${{ steps.renpybuild.outputs.dir }} + "/my-artifact.zip"
        
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }} ${{ github.run_attempt }}
          release_name: Release ${{ github.ref }} ${{ github.run_attempt }}
          draft: false
          prerelease: false
          
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: format('{0}/Ska_is_the_Limit-1.0-pc.zip', ${{ steps.renpybuild.outputs.dir }})
          asset_name: Ska_is_the_Limit-1.0-pc.zip
          asset_content_type: application/zip
      
